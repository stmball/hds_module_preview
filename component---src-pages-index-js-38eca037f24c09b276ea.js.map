{"version":3,"file":"component---src-pages-index-js-38eca037f24c09b276ea.js","mappings":"uJA8BA,IA3Be,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADcC,yBACDJ,EAASK,SAC5B,IAAIC,EAgBJ,OAbEA,EADEH,EAEA,sBAAII,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKR,IAKhB,gBAAC,EAAAO,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCR,GAML,uBAAKM,UAAU,iBAAiB,oBAAmBJ,GACjD,0BAAQI,UAAU,iBAAiBD,GACnC,4BAAOJ,GACH,C,+CCuBV,IAvCY,IAAuC,IAAD,UAArC,YAAEQ,EAAW,MAAET,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAES,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBb,MAExC,OACE,gCACE,6BAAQc,EAAkBd,EAAK,MAAMc,EAAiBd,GACtD,wBAAMe,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAShB,IACnC,wBAAMiB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAAShB,IACpC,wBAAMe,KAAK,sBAAsBC,QAASJ,IACzCX,EACA,C,6GCvCP,MAAMmB,EAAU,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAU,EAElC,OADAC,QAAQC,IAAIH,GAEV,sBAAIf,UAAU,eACXe,EACEI,QAAOC,GACCA,EAAKC,YAAYL,WAAaA,IAEtCM,MAAK,CAACF,EAAMG,IAAUH,EAAKC,YAAYG,KAAOD,EAAMF,YAAYG,OAChEC,KAAIL,IACH,MAAM1B,EAAQ0B,EAAKC,YAAY3B,OAAS0B,EAAKM,OAAOC,KAC9CH,EAAOJ,EAAKC,YAAYG,MAAQ,GAEtC,OACE,sBAAII,IAAKR,EAAKM,OAAOC,KAAM3B,UAAU,eACnC,2BACEA,UAAU,iBACV6B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAA7B,KAAI,CAACC,GAAIkB,EAAKM,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYP,EAAK,MAAI9B,MAI1C,+BACE,qBACEsC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYlB,aAAeiB,EAAKc,SAE/CH,SAAS,kBAIZ,IAGR,EAyBT,UArBkB,IAAyB,IAAD,MAAvB,KAAEI,EAAI,SAAE1C,GAAU,EACnC,MAAM2C,GAAkC,QAAtB,EAAAD,EAAK/B,KAAKG,oBAAY,aAAtB,EAAwBb,QAAK,QACzCqB,EAAQoB,EAAKE,kBAAkBC,MAErC,OAAqB,IAAjBvB,EAAMwB,OAEN,gBAAC,IAAM,CAAC9C,SAAUA,EAAUC,MAAO0C,IAMrC,gBAAC,IAAM,CAAC3C,SAAUA,EAAUC,MAAO0C,GACjC,0BAAI,sBACJ,gBAACtB,EAAO,CAACC,MAAOA,EAAOC,UAAU,IACjC,0BAAI,oBACJ,gBAACF,EAAO,CAACC,MAAOA,EAAOC,UAAU,IAC1B,EAWN,MAAMwB,EAAO,IAAM,gBAAC,IAAG,CAAC9C,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Modules = ({ posts, optional }) => {\n  console.log(posts)\n  return (\n    <ol className=\"module-grid\">\n      {posts\n        .filter(post => {\n          return post.frontmatter.optional === optional\n        })\n        .sort((post, other) => post.frontmatter.code > other.frontmatter.code)\n        .map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const code = post.frontmatter.code || \"\"\n\n          return (\n            <li key={post.fields.slug} className=\"module-card\">\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{code} - {title}</span>\n                    </Link>\n                  </h2>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n    </ol>\n  )\n}\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h2>Compulsory Modules</h2>\n      <Modules posts={posts} optional={false} />\n      <h2>Optional Modules</h2>\n      <Modules posts={posts} optional={true} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          code\n          optional\n        }\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","className","Link","to","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Modules","posts","optional","console","log","filter","post","frontmatter","sort","other","code","map","fields","slug","key","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","excerpt","data","siteTitle","allMarkdownRemark","nodes","length","Head"],"sourceRoot":""}